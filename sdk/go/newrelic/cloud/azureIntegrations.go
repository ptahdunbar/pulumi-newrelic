// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloud

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this resource to integrate Azure services with New Relic.
//
// ## Prerequisite
//
// To start receiving Azure data with New Relic Azure integrations, connect your Azure account to New Relic infrastructure monitoring. If you don't have one already, create a New Relic account. It's free, forever.
//
// Setup is required for this resource to work properly. This resource assumes you have linked an Azure account to New Relic.
//
// You can find instructions on how to set up Azure on [our documentation](https://docs.newrelic.com/docs/infrastructure/microsoft-azure-integrations/get-started/activate-azure-integrations/).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-newrelic/sdk/v4/go/newrelic/cloud"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		fooAzureLinkAccount, err := cloud.NewAzureLinkAccount(ctx, "fooAzureLinkAccount", &cloud.AzureLinkAccountArgs{
// 			AccountId:      pulumi.Int("The New Relic account ID where you want to link the Azure account"),
// 			ApplicationId:  pulumi.String("ID of the application"),
// 			ClientSecret:   pulumi.String("Secret value of client's Azure account"),
// 			SubscriptionId: pulumi.String("Subscription ID of Azure"),
// 			TenantId:       pulumi.String("Tenant ID of the Azure"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = cloud.NewAzureIntegrations(ctx, "fooAzureIntegrations", &cloud.AzureIntegrationsArgs{
// 			LinkedAccountId: fooAzureLinkAccount.ID(),
// 			AccountId:       pulumi.Int("The New Relic account ID"),
// 			ApiManagement: &cloud.AzureIntegrationsApiManagementArgs{
// 				MetricsPollingInterval: pulumi.Int(1200),
// 				ResourceGroups: pulumi.StringArray{
// 					pulumi.String("resource_groups"),
// 				},
// 			},
// 			AppGateway: &cloud.AzureIntegrationsAppGatewayArgs{
// 				MetricsPollingInterval: pulumi.Int(1200),
// 				ResourceGroups: pulumi.StringArray{
// 					pulumi.String("resource_groups"),
// 				},
// 			},
// 			AppService: &cloud.AzureIntegrationsAppServiceArgs{
// 				MetricsPollingInterval: pulumi.Int(1200),
// 				ResourceGroups: pulumi.StringArray{
// 					pulumi.String("resource_groups"),
// 				},
// 			},
// 			Containers: &cloud.AzureIntegrationsContainersArgs{
// 				MetricsPollingInterval: pulumi.Int(1200),
// 				ResourceGroups: pulumi.StringArray{
// 					pulumi.String("resource_groups"),
// 				},
// 			},
// 			CosmosDb: &cloud.AzureIntegrationsCosmosDbArgs{
// 				MetricsPollingInterval: pulumi.Int(1200),
// 				ResourceGroups: pulumi.StringArray{
// 					pulumi.String("resource_groups"),
// 				},
// 			},
// 			CostManagement: &cloud.AzureIntegrationsCostManagementArgs{
// 				MetricsPollingInterval: pulumi.Int(3600),
// 				TagKeys: pulumi.StringArray{
// 					pulumi.String("tag_keys"),
// 				},
// 			},
// 			DataFactory: &cloud.AzureIntegrationsDataFactoryArgs{
// 				MetricsPollingInterval: pulumi.Int(1200),
// 				ResourceGroups: pulumi.StringArray{
// 					pulumi.String("resource_groups"),
// 				},
// 			},
// 			EventHub: cloud.AzureIntegrationsEventHubArgs{
// 				map[string]interface{}{
// 					"metricsPollingInterval": 1200,
// 					"resourceGroups": []string{
// 						"resource_groups",
// 					},
// 				},
// 				map[string]interface{}{
// 					"metricsPollingInterval": 1200,
// 					"resourceGroups": []string{
// 						"resource_groups",
// 					},
// 				},
// 			},
// 			ExpressRoute: &cloud.AzureIntegrationsExpressRouteArgs{
// 				MetricsPollingInterval: pulumi.Int(1200),
// 				ResourceGroups: pulumi.StringArray{
// 					pulumi.String("resource_groups"),
// 				},
// 			},
// 			Firewalls: &cloud.AzureIntegrationsFirewallsArgs{
// 				MetricsPollingInterval: pulumi.Int(1200),
// 				ResourceGroups: pulumi.StringArray{
// 					pulumi.String("resource_groups"),
// 				},
// 			},
// 			FrontDoor: &cloud.AzureIntegrationsFrontDoorArgs{
// 				MetricsPollingInterval: pulumi.Int(1200),
// 				ResourceGroups: pulumi.StringArray{
// 					pulumi.String("resource_groups"),
// 				},
// 			},
// 			Functions: &cloud.AzureIntegrationsFunctionsArgs{
// 				MetricsPollingInterval: pulumi.Int(1200),
// 				ResourceGroups: pulumi.StringArray{
// 					pulumi.String("resource_groups"),
// 				},
// 			},
// 			KeyVault: &cloud.AzureIntegrationsKeyVaultArgs{
// 				MetricsPollingInterval: pulumi.Int(1200),
// 				ResourceGroups: pulumi.StringArray{
// 					pulumi.String("resource_groups"),
// 				},
// 			},
// 			LoadBalancer: &cloud.AzureIntegrationsLoadBalancerArgs{
// 				MetricsPollingInterval: pulumi.Int(1200),
// 				ResourceGroups: pulumi.StringArray{
// 					pulumi.String("resource_groups"),
// 				},
// 			},
// 			LogicApps: &cloud.AzureIntegrationsLogicAppsArgs{
// 				MetricsPollingInterval: pulumi.Int(1200),
// 				ResourceGroups: pulumi.StringArray{
// 					pulumi.String("resource_groups"),
// 				},
// 			},
// 			MachineLearning: &cloud.AzureIntegrationsMachineLearningArgs{
// 				MetricsPollingInterval: pulumi.Int(1200),
// 				ResourceGroups: pulumi.StringArray{
// 					pulumi.String("resource_groups"),
// 				},
// 			},
// 			MariaDb: &cloud.AzureIntegrationsMariaDbArgs{
// 				MetricsPollingInterval: pulumi.Int(1200),
// 				ResourceGroups: pulumi.StringArray{
// 					pulumi.String("resource_groups"),
// 				},
// 			},
// 			Mysql: &cloud.AzureIntegrationsMysqlArgs{
// 				MetricsPollingInterval: pulumi.Int(1200),
// 				ResourceGroups: pulumi.StringArray{
// 					pulumi.String("resource_groups"),
// 				},
// 			},
// 			Postgresql: &cloud.AzureIntegrationsPostgresqlArgs{
// 				MetricsPollingInterval: pulumi.Int(1200),
// 				ResourceGroups: pulumi.StringArray{
// 					pulumi.String("resource_groups"),
// 				},
// 			},
// 			PowerBiDedicated: &cloud.AzureIntegrationsPowerBiDedicatedArgs{
// 				MetricsPollingInterval: pulumi.Int(1200),
// 				ResourceGroups: pulumi.StringArray{
// 					pulumi.String("resource_groups"),
// 				},
// 			},
// 			RedisCache: &cloud.AzureIntegrationsRedisCacheArgs{
// 				MetricsPollingInterval: pulumi.Int(1200),
// 				ResourceGroups: pulumi.StringArray{
// 					pulumi.String("resource_groups"),
// 				},
// 			},
// 			ServiceBus: &cloud.AzureIntegrationsServiceBusArgs{
// 				MetricsPollingInterval: pulumi.Int(1200),
// 				ResourceGroups: pulumi.StringArray{
// 					pulumi.String("resource_groups"),
// 				},
// 			},
// 			Sql: &cloud.AzureIntegrationsSqlArgs{
// 				MetricsPollingInterval: pulumi.Int(1200),
// 				ResourceGroups: pulumi.StringArray{
// 					pulumi.String("resource_groups"),
// 				},
// 			},
// 			SqlManaged: &cloud.AzureIntegrationsSqlManagedArgs{
// 				MetricsPollingInterval: pulumi.Int(1200),
// 				ResourceGroups: pulumi.StringArray{
// 					pulumi.String("resource_groups"),
// 				},
// 			},
// 			Storage: &cloud.AzureIntegrationsStorageArgs{
// 				MetricsPollingInterval: pulumi.Int(1200),
// 				ResourceGroups: pulumi.StringArray{
// 					pulumi.String("resource_groups"),
// 				},
// 			},
// 			VirtualMachine: &cloud.AzureIntegrationsVirtualMachineArgs{
// 				MetricsPollingInterval: pulumi.Int(1200),
// 				ResourceGroups: pulumi.StringArray{
// 					pulumi.String("resource_groups"),
// 				},
// 			},
// 			VirtualNetworks: &cloud.AzureIntegrationsVirtualNetworksArgs{
// 				MetricsPollingInterval: pulumi.Int(1200),
// 				ResourceGroups: pulumi.StringArray{
// 					pulumi.String("resource_groups"),
// 				},
// 			},
// 			Vms: &cloud.AzureIntegrationsVmsArgs{
// 				MetricsPollingInterval: pulumi.Int(1200),
// 				ResourceGroups: pulumi.StringArray{
// 					pulumi.String("resource_groups"),
// 				},
// 			},
// 			VpnGateway: &cloud.AzureIntegrationsVpnGatewayArgs{
// 				MetricsPollingInterval: pulumi.Int(1200),
// 				ResourceGroups: pulumi.StringArray{
// 					pulumi.String("resource_groups"),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Linked Azure accounts can be imported using `id`, you can find the `id` of existing Azure linked accounts in Azure dashboard under Infrastructure in NewRelic. bash
//
// ```sh
//  $ pulumi import newrelic:cloud/azureIntegrations:AzureIntegrations foo <id>
// ```
type AzureIntegrations struct {
	pulumi.CustomResourceState

	// The New Relic account ID to operate on.  This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
	AccountId pulumi.IntOutput `pulumi:"accountId"`
	// Azure API Management. See Integration blocks below for details.
	ApiManagement AzureIntegrationsApiManagementPtrOutput `pulumi:"apiManagement"`
	// Azure App Gateway. See Integration blocks below for details.
	AppGateway AzureIntegrationsAppGatewayPtrOutput `pulumi:"appGateway"`
	// Azure App Service. See Integration blocks below for details.
	AppService AzureIntegrationsAppServicePtrOutput `pulumi:"appService"`
	// Azure Containers. See Integration blocks below for details.
	Containers AzureIntegrationsContainersPtrOutput `pulumi:"containers"`
	// Azure CosmosDB. See Integration blocks below for details.
	CosmosDb AzureIntegrationsCosmosDbPtrOutput `pulumi:"cosmosDb"`
	// Azure Cost Management. See Integration blocks below for details.
	CostManagement AzureIntegrationsCostManagementPtrOutput `pulumi:"costManagement"`
	// for Azure Data Factory. See Integration blocks below for details.
	DataFactory AzureIntegrationsDataFactoryPtrOutput `pulumi:"dataFactory"`
	// for Azure Event Hub. See Integration blocks below for details.
	EventHub AzureIntegrationsEventHubPtrOutput `pulumi:"eventHub"`
	// for Azure Express Route. See Integration blocks below for details.
	ExpressRoute AzureIntegrationsExpressRoutePtrOutput `pulumi:"expressRoute"`
	// for Azure Firewalls. See Integration blocks below for details.
	Firewalls AzureIntegrationsFirewallsPtrOutput `pulumi:"firewalls"`
	// for Azure Front Door. See Integration blocks below for details.
	FrontDoor AzureIntegrationsFrontDoorPtrOutput `pulumi:"frontDoor"`
	// for Azure Functions. See Integration blocks below for details.
	Functions AzureIntegrationsFunctionsPtrOutput `pulumi:"functions"`
	// for Azure Key Vault. See Integration blocks below for details.
	KeyVault AzureIntegrationsKeyVaultPtrOutput `pulumi:"keyVault"`
	// The ID of the linked Azure account in New Relic.
	LinkedAccountId pulumi.IntOutput `pulumi:"linkedAccountId"`
	// for Azure Load Balancer. See Integration blocks below for details.
	LoadBalancer AzureIntegrationsLoadBalancerPtrOutput `pulumi:"loadBalancer"`
	// for Azure Logic Apps. See Integration blocks below for details.
	LogicApps AzureIntegrationsLogicAppsPtrOutput `pulumi:"logicApps"`
	// for Azure Machine Learning. See Integration blocks below for details.
	MachineLearning AzureIntegrationsMachineLearningPtrOutput `pulumi:"machineLearning"`
	// for Azure MariaDB. See Integration blocks below for details.
	MariaDb AzureIntegrationsMariaDbPtrOutput `pulumi:"mariaDb"`
	// for Azure MySQL. See Integration blocks below for details.
	Mysql AzureIntegrationsMysqlPtrOutput `pulumi:"mysql"`
	// for Azure PostgreSQL. See Integration blocks below for details.
	Postgresql AzureIntegrationsPostgresqlPtrOutput `pulumi:"postgresql"`
	// for Azure Power BI Dedicated. See Integration blocks below for details.
	PowerBiDedicated AzureIntegrationsPowerBiDedicatedPtrOutput `pulumi:"powerBiDedicated"`
	// for Azure Redis Cache. See Integration blocks below for details.
	RedisCache AzureIntegrationsRedisCachePtrOutput `pulumi:"redisCache"`
	// for Azure Service Bus. See Integration blocks below for details.
	ServiceBus AzureIntegrationsServiceBusPtrOutput `pulumi:"serviceBus"`
	// for Azure SQL. See Integration blocks below for details.
	Sql AzureIntegrationsSqlPtrOutput `pulumi:"sql"`
	// for SQL Managed. See Integration blocks below for details.
	SqlManaged AzureIntegrationsSqlManagedPtrOutput `pulumi:"sqlManaged"`
	// for Azure Storage. See Integration blocks below for details.
	Storage AzureIntegrationsStoragePtrOutput `pulumi:"storage"`
	// for Azure Virtual machine. See Integration blocks below for details.
	VirtualMachine AzureIntegrationsVirtualMachinePtrOutput `pulumi:"virtualMachine"`
	// The Azure virtual networks
	VirtualNetworks AzureIntegrationsVirtualNetworksPtrOutput `pulumi:"virtualNetworks"`
	// for Azure VMs. See Integration blocks below for details.
	Vms AzureIntegrationsVmsPtrOutput `pulumi:"vms"`
	// for Azure VPN Gateway. See Integration blocks below for details.
	VpnGateway AzureIntegrationsVpnGatewayPtrOutput `pulumi:"vpnGateway"`
}

// NewAzureIntegrations registers a new resource with the given unique name, arguments, and options.
func NewAzureIntegrations(ctx *pulumi.Context,
	name string, args *AzureIntegrationsArgs, opts ...pulumi.ResourceOption) (*AzureIntegrations, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LinkedAccountId == nil {
		return nil, errors.New("invalid value for required argument 'LinkedAccountId'")
	}
	var resource AzureIntegrations
	err := ctx.RegisterResource("newrelic:cloud/azureIntegrations:AzureIntegrations", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAzureIntegrations gets an existing AzureIntegrations resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAzureIntegrations(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AzureIntegrationsState, opts ...pulumi.ResourceOption) (*AzureIntegrations, error) {
	var resource AzureIntegrations
	err := ctx.ReadResource("newrelic:cloud/azureIntegrations:AzureIntegrations", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AzureIntegrations resources.
type azureIntegrationsState struct {
	// The New Relic account ID to operate on.  This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
	AccountId *int `pulumi:"accountId"`
	// Azure API Management. See Integration blocks below for details.
	ApiManagement *AzureIntegrationsApiManagement `pulumi:"apiManagement"`
	// Azure App Gateway. See Integration blocks below for details.
	AppGateway *AzureIntegrationsAppGateway `pulumi:"appGateway"`
	// Azure App Service. See Integration blocks below for details.
	AppService *AzureIntegrationsAppService `pulumi:"appService"`
	// Azure Containers. See Integration blocks below for details.
	Containers *AzureIntegrationsContainers `pulumi:"containers"`
	// Azure CosmosDB. See Integration blocks below for details.
	CosmosDb *AzureIntegrationsCosmosDb `pulumi:"cosmosDb"`
	// Azure Cost Management. See Integration blocks below for details.
	CostManagement *AzureIntegrationsCostManagement `pulumi:"costManagement"`
	// for Azure Data Factory. See Integration blocks below for details.
	DataFactory *AzureIntegrationsDataFactory `pulumi:"dataFactory"`
	// for Azure Event Hub. See Integration blocks below for details.
	EventHub *AzureIntegrationsEventHub `pulumi:"eventHub"`
	// for Azure Express Route. See Integration blocks below for details.
	ExpressRoute *AzureIntegrationsExpressRoute `pulumi:"expressRoute"`
	// for Azure Firewalls. See Integration blocks below for details.
	Firewalls *AzureIntegrationsFirewalls `pulumi:"firewalls"`
	// for Azure Front Door. See Integration blocks below for details.
	FrontDoor *AzureIntegrationsFrontDoor `pulumi:"frontDoor"`
	// for Azure Functions. See Integration blocks below for details.
	Functions *AzureIntegrationsFunctions `pulumi:"functions"`
	// for Azure Key Vault. See Integration blocks below for details.
	KeyVault *AzureIntegrationsKeyVault `pulumi:"keyVault"`
	// The ID of the linked Azure account in New Relic.
	LinkedAccountId *int `pulumi:"linkedAccountId"`
	// for Azure Load Balancer. See Integration blocks below for details.
	LoadBalancer *AzureIntegrationsLoadBalancer `pulumi:"loadBalancer"`
	// for Azure Logic Apps. See Integration blocks below for details.
	LogicApps *AzureIntegrationsLogicApps `pulumi:"logicApps"`
	// for Azure Machine Learning. See Integration blocks below for details.
	MachineLearning *AzureIntegrationsMachineLearning `pulumi:"machineLearning"`
	// for Azure MariaDB. See Integration blocks below for details.
	MariaDb *AzureIntegrationsMariaDb `pulumi:"mariaDb"`
	// for Azure MySQL. See Integration blocks below for details.
	Mysql *AzureIntegrationsMysql `pulumi:"mysql"`
	// for Azure PostgreSQL. See Integration blocks below for details.
	Postgresql *AzureIntegrationsPostgresql `pulumi:"postgresql"`
	// for Azure Power BI Dedicated. See Integration blocks below for details.
	PowerBiDedicated *AzureIntegrationsPowerBiDedicated `pulumi:"powerBiDedicated"`
	// for Azure Redis Cache. See Integration blocks below for details.
	RedisCache *AzureIntegrationsRedisCache `pulumi:"redisCache"`
	// for Azure Service Bus. See Integration blocks below for details.
	ServiceBus *AzureIntegrationsServiceBus `pulumi:"serviceBus"`
	// for Azure SQL. See Integration blocks below for details.
	Sql *AzureIntegrationsSql `pulumi:"sql"`
	// for SQL Managed. See Integration blocks below for details.
	SqlManaged *AzureIntegrationsSqlManaged `pulumi:"sqlManaged"`
	// for Azure Storage. See Integration blocks below for details.
	Storage *AzureIntegrationsStorage `pulumi:"storage"`
	// for Azure Virtual machine. See Integration blocks below for details.
	VirtualMachine *AzureIntegrationsVirtualMachine `pulumi:"virtualMachine"`
	// The Azure virtual networks
	VirtualNetworks *AzureIntegrationsVirtualNetworks `pulumi:"virtualNetworks"`
	// for Azure VMs. See Integration blocks below for details.
	Vms *AzureIntegrationsVms `pulumi:"vms"`
	// for Azure VPN Gateway. See Integration blocks below for details.
	VpnGateway *AzureIntegrationsVpnGateway `pulumi:"vpnGateway"`
}

type AzureIntegrationsState struct {
	// The New Relic account ID to operate on.  This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
	AccountId pulumi.IntPtrInput
	// Azure API Management. See Integration blocks below for details.
	ApiManagement AzureIntegrationsApiManagementPtrInput
	// Azure App Gateway. See Integration blocks below for details.
	AppGateway AzureIntegrationsAppGatewayPtrInput
	// Azure App Service. See Integration blocks below for details.
	AppService AzureIntegrationsAppServicePtrInput
	// Azure Containers. See Integration blocks below for details.
	Containers AzureIntegrationsContainersPtrInput
	// Azure CosmosDB. See Integration blocks below for details.
	CosmosDb AzureIntegrationsCosmosDbPtrInput
	// Azure Cost Management. See Integration blocks below for details.
	CostManagement AzureIntegrationsCostManagementPtrInput
	// for Azure Data Factory. See Integration blocks below for details.
	DataFactory AzureIntegrationsDataFactoryPtrInput
	// for Azure Event Hub. See Integration blocks below for details.
	EventHub AzureIntegrationsEventHubPtrInput
	// for Azure Express Route. See Integration blocks below for details.
	ExpressRoute AzureIntegrationsExpressRoutePtrInput
	// for Azure Firewalls. See Integration blocks below for details.
	Firewalls AzureIntegrationsFirewallsPtrInput
	// for Azure Front Door. See Integration blocks below for details.
	FrontDoor AzureIntegrationsFrontDoorPtrInput
	// for Azure Functions. See Integration blocks below for details.
	Functions AzureIntegrationsFunctionsPtrInput
	// for Azure Key Vault. See Integration blocks below for details.
	KeyVault AzureIntegrationsKeyVaultPtrInput
	// The ID of the linked Azure account in New Relic.
	LinkedAccountId pulumi.IntPtrInput
	// for Azure Load Balancer. See Integration blocks below for details.
	LoadBalancer AzureIntegrationsLoadBalancerPtrInput
	// for Azure Logic Apps. See Integration blocks below for details.
	LogicApps AzureIntegrationsLogicAppsPtrInput
	// for Azure Machine Learning. See Integration blocks below for details.
	MachineLearning AzureIntegrationsMachineLearningPtrInput
	// for Azure MariaDB. See Integration blocks below for details.
	MariaDb AzureIntegrationsMariaDbPtrInput
	// for Azure MySQL. See Integration blocks below for details.
	Mysql AzureIntegrationsMysqlPtrInput
	// for Azure PostgreSQL. See Integration blocks below for details.
	Postgresql AzureIntegrationsPostgresqlPtrInput
	// for Azure Power BI Dedicated. See Integration blocks below for details.
	PowerBiDedicated AzureIntegrationsPowerBiDedicatedPtrInput
	// for Azure Redis Cache. See Integration blocks below for details.
	RedisCache AzureIntegrationsRedisCachePtrInput
	// for Azure Service Bus. See Integration blocks below for details.
	ServiceBus AzureIntegrationsServiceBusPtrInput
	// for Azure SQL. See Integration blocks below for details.
	Sql AzureIntegrationsSqlPtrInput
	// for SQL Managed. See Integration blocks below for details.
	SqlManaged AzureIntegrationsSqlManagedPtrInput
	// for Azure Storage. See Integration blocks below for details.
	Storage AzureIntegrationsStoragePtrInput
	// for Azure Virtual machine. See Integration blocks below for details.
	VirtualMachine AzureIntegrationsVirtualMachinePtrInput
	// The Azure virtual networks
	VirtualNetworks AzureIntegrationsVirtualNetworksPtrInput
	// for Azure VMs. See Integration blocks below for details.
	Vms AzureIntegrationsVmsPtrInput
	// for Azure VPN Gateway. See Integration blocks below for details.
	VpnGateway AzureIntegrationsVpnGatewayPtrInput
}

func (AzureIntegrationsState) ElementType() reflect.Type {
	return reflect.TypeOf((*azureIntegrationsState)(nil)).Elem()
}

type azureIntegrationsArgs struct {
	// The New Relic account ID to operate on.  This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
	AccountId *int `pulumi:"accountId"`
	// Azure API Management. See Integration blocks below for details.
	ApiManagement *AzureIntegrationsApiManagement `pulumi:"apiManagement"`
	// Azure App Gateway. See Integration blocks below for details.
	AppGateway *AzureIntegrationsAppGateway `pulumi:"appGateway"`
	// Azure App Service. See Integration blocks below for details.
	AppService *AzureIntegrationsAppService `pulumi:"appService"`
	// Azure Containers. See Integration blocks below for details.
	Containers *AzureIntegrationsContainers `pulumi:"containers"`
	// Azure CosmosDB. See Integration blocks below for details.
	CosmosDb *AzureIntegrationsCosmosDb `pulumi:"cosmosDb"`
	// Azure Cost Management. See Integration blocks below for details.
	CostManagement *AzureIntegrationsCostManagement `pulumi:"costManagement"`
	// for Azure Data Factory. See Integration blocks below for details.
	DataFactory *AzureIntegrationsDataFactory `pulumi:"dataFactory"`
	// for Azure Event Hub. See Integration blocks below for details.
	EventHub *AzureIntegrationsEventHub `pulumi:"eventHub"`
	// for Azure Express Route. See Integration blocks below for details.
	ExpressRoute *AzureIntegrationsExpressRoute `pulumi:"expressRoute"`
	// for Azure Firewalls. See Integration blocks below for details.
	Firewalls *AzureIntegrationsFirewalls `pulumi:"firewalls"`
	// for Azure Front Door. See Integration blocks below for details.
	FrontDoor *AzureIntegrationsFrontDoor `pulumi:"frontDoor"`
	// for Azure Functions. See Integration blocks below for details.
	Functions *AzureIntegrationsFunctions `pulumi:"functions"`
	// for Azure Key Vault. See Integration blocks below for details.
	KeyVault *AzureIntegrationsKeyVault `pulumi:"keyVault"`
	// The ID of the linked Azure account in New Relic.
	LinkedAccountId int `pulumi:"linkedAccountId"`
	// for Azure Load Balancer. See Integration blocks below for details.
	LoadBalancer *AzureIntegrationsLoadBalancer `pulumi:"loadBalancer"`
	// for Azure Logic Apps. See Integration blocks below for details.
	LogicApps *AzureIntegrationsLogicApps `pulumi:"logicApps"`
	// for Azure Machine Learning. See Integration blocks below for details.
	MachineLearning *AzureIntegrationsMachineLearning `pulumi:"machineLearning"`
	// for Azure MariaDB. See Integration blocks below for details.
	MariaDb *AzureIntegrationsMariaDb `pulumi:"mariaDb"`
	// for Azure MySQL. See Integration blocks below for details.
	Mysql *AzureIntegrationsMysql `pulumi:"mysql"`
	// for Azure PostgreSQL. See Integration blocks below for details.
	Postgresql *AzureIntegrationsPostgresql `pulumi:"postgresql"`
	// for Azure Power BI Dedicated. See Integration blocks below for details.
	PowerBiDedicated *AzureIntegrationsPowerBiDedicated `pulumi:"powerBiDedicated"`
	// for Azure Redis Cache. See Integration blocks below for details.
	RedisCache *AzureIntegrationsRedisCache `pulumi:"redisCache"`
	// for Azure Service Bus. See Integration blocks below for details.
	ServiceBus *AzureIntegrationsServiceBus `pulumi:"serviceBus"`
	// for Azure SQL. See Integration blocks below for details.
	Sql *AzureIntegrationsSql `pulumi:"sql"`
	// for SQL Managed. See Integration blocks below for details.
	SqlManaged *AzureIntegrationsSqlManaged `pulumi:"sqlManaged"`
	// for Azure Storage. See Integration blocks below for details.
	Storage *AzureIntegrationsStorage `pulumi:"storage"`
	// for Azure Virtual machine. See Integration blocks below for details.
	VirtualMachine *AzureIntegrationsVirtualMachine `pulumi:"virtualMachine"`
	// The Azure virtual networks
	VirtualNetworks *AzureIntegrationsVirtualNetworks `pulumi:"virtualNetworks"`
	// for Azure VMs. See Integration blocks below for details.
	Vms *AzureIntegrationsVms `pulumi:"vms"`
	// for Azure VPN Gateway. See Integration blocks below for details.
	VpnGateway *AzureIntegrationsVpnGateway `pulumi:"vpnGateway"`
}

// The set of arguments for constructing a AzureIntegrations resource.
type AzureIntegrationsArgs struct {
	// The New Relic account ID to operate on.  This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
	AccountId pulumi.IntPtrInput
	// Azure API Management. See Integration blocks below for details.
	ApiManagement AzureIntegrationsApiManagementPtrInput
	// Azure App Gateway. See Integration blocks below for details.
	AppGateway AzureIntegrationsAppGatewayPtrInput
	// Azure App Service. See Integration blocks below for details.
	AppService AzureIntegrationsAppServicePtrInput
	// Azure Containers. See Integration blocks below for details.
	Containers AzureIntegrationsContainersPtrInput
	// Azure CosmosDB. See Integration blocks below for details.
	CosmosDb AzureIntegrationsCosmosDbPtrInput
	// Azure Cost Management. See Integration blocks below for details.
	CostManagement AzureIntegrationsCostManagementPtrInput
	// for Azure Data Factory. See Integration blocks below for details.
	DataFactory AzureIntegrationsDataFactoryPtrInput
	// for Azure Event Hub. See Integration blocks below for details.
	EventHub AzureIntegrationsEventHubPtrInput
	// for Azure Express Route. See Integration blocks below for details.
	ExpressRoute AzureIntegrationsExpressRoutePtrInput
	// for Azure Firewalls. See Integration blocks below for details.
	Firewalls AzureIntegrationsFirewallsPtrInput
	// for Azure Front Door. See Integration blocks below for details.
	FrontDoor AzureIntegrationsFrontDoorPtrInput
	// for Azure Functions. See Integration blocks below for details.
	Functions AzureIntegrationsFunctionsPtrInput
	// for Azure Key Vault. See Integration blocks below for details.
	KeyVault AzureIntegrationsKeyVaultPtrInput
	// The ID of the linked Azure account in New Relic.
	LinkedAccountId pulumi.IntInput
	// for Azure Load Balancer. See Integration blocks below for details.
	LoadBalancer AzureIntegrationsLoadBalancerPtrInput
	// for Azure Logic Apps. See Integration blocks below for details.
	LogicApps AzureIntegrationsLogicAppsPtrInput
	// for Azure Machine Learning. See Integration blocks below for details.
	MachineLearning AzureIntegrationsMachineLearningPtrInput
	// for Azure MariaDB. See Integration blocks below for details.
	MariaDb AzureIntegrationsMariaDbPtrInput
	// for Azure MySQL. See Integration blocks below for details.
	Mysql AzureIntegrationsMysqlPtrInput
	// for Azure PostgreSQL. See Integration blocks below for details.
	Postgresql AzureIntegrationsPostgresqlPtrInput
	// for Azure Power BI Dedicated. See Integration blocks below for details.
	PowerBiDedicated AzureIntegrationsPowerBiDedicatedPtrInput
	// for Azure Redis Cache. See Integration blocks below for details.
	RedisCache AzureIntegrationsRedisCachePtrInput
	// for Azure Service Bus. See Integration blocks below for details.
	ServiceBus AzureIntegrationsServiceBusPtrInput
	// for Azure SQL. See Integration blocks below for details.
	Sql AzureIntegrationsSqlPtrInput
	// for SQL Managed. See Integration blocks below for details.
	SqlManaged AzureIntegrationsSqlManagedPtrInput
	// for Azure Storage. See Integration blocks below for details.
	Storage AzureIntegrationsStoragePtrInput
	// for Azure Virtual machine. See Integration blocks below for details.
	VirtualMachine AzureIntegrationsVirtualMachinePtrInput
	// The Azure virtual networks
	VirtualNetworks AzureIntegrationsVirtualNetworksPtrInput
	// for Azure VMs. See Integration blocks below for details.
	Vms AzureIntegrationsVmsPtrInput
	// for Azure VPN Gateway. See Integration blocks below for details.
	VpnGateway AzureIntegrationsVpnGatewayPtrInput
}

func (AzureIntegrationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*azureIntegrationsArgs)(nil)).Elem()
}

type AzureIntegrationsInput interface {
	pulumi.Input

	ToAzureIntegrationsOutput() AzureIntegrationsOutput
	ToAzureIntegrationsOutputWithContext(ctx context.Context) AzureIntegrationsOutput
}

func (*AzureIntegrations) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIntegrations)(nil)).Elem()
}

func (i *AzureIntegrations) ToAzureIntegrationsOutput() AzureIntegrationsOutput {
	return i.ToAzureIntegrationsOutputWithContext(context.Background())
}

func (i *AzureIntegrations) ToAzureIntegrationsOutputWithContext(ctx context.Context) AzureIntegrationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIntegrationsOutput)
}

// AzureIntegrationsArrayInput is an input type that accepts AzureIntegrationsArray and AzureIntegrationsArrayOutput values.
// You can construct a concrete instance of `AzureIntegrationsArrayInput` via:
//
//          AzureIntegrationsArray{ AzureIntegrationsArgs{...} }
type AzureIntegrationsArrayInput interface {
	pulumi.Input

	ToAzureIntegrationsArrayOutput() AzureIntegrationsArrayOutput
	ToAzureIntegrationsArrayOutputWithContext(context.Context) AzureIntegrationsArrayOutput
}

type AzureIntegrationsArray []AzureIntegrationsInput

func (AzureIntegrationsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzureIntegrations)(nil)).Elem()
}

func (i AzureIntegrationsArray) ToAzureIntegrationsArrayOutput() AzureIntegrationsArrayOutput {
	return i.ToAzureIntegrationsArrayOutputWithContext(context.Background())
}

func (i AzureIntegrationsArray) ToAzureIntegrationsArrayOutputWithContext(ctx context.Context) AzureIntegrationsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIntegrationsArrayOutput)
}

// AzureIntegrationsMapInput is an input type that accepts AzureIntegrationsMap and AzureIntegrationsMapOutput values.
// You can construct a concrete instance of `AzureIntegrationsMapInput` via:
//
//          AzureIntegrationsMap{ "key": AzureIntegrationsArgs{...} }
type AzureIntegrationsMapInput interface {
	pulumi.Input

	ToAzureIntegrationsMapOutput() AzureIntegrationsMapOutput
	ToAzureIntegrationsMapOutputWithContext(context.Context) AzureIntegrationsMapOutput
}

type AzureIntegrationsMap map[string]AzureIntegrationsInput

func (AzureIntegrationsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzureIntegrations)(nil)).Elem()
}

func (i AzureIntegrationsMap) ToAzureIntegrationsMapOutput() AzureIntegrationsMapOutput {
	return i.ToAzureIntegrationsMapOutputWithContext(context.Background())
}

func (i AzureIntegrationsMap) ToAzureIntegrationsMapOutputWithContext(ctx context.Context) AzureIntegrationsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIntegrationsMapOutput)
}

type AzureIntegrationsOutput struct{ *pulumi.OutputState }

func (AzureIntegrationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIntegrations)(nil)).Elem()
}

func (o AzureIntegrationsOutput) ToAzureIntegrationsOutput() AzureIntegrationsOutput {
	return o
}

func (o AzureIntegrationsOutput) ToAzureIntegrationsOutputWithContext(ctx context.Context) AzureIntegrationsOutput {
	return o
}

type AzureIntegrationsArrayOutput struct{ *pulumi.OutputState }

func (AzureIntegrationsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzureIntegrations)(nil)).Elem()
}

func (o AzureIntegrationsArrayOutput) ToAzureIntegrationsArrayOutput() AzureIntegrationsArrayOutput {
	return o
}

func (o AzureIntegrationsArrayOutput) ToAzureIntegrationsArrayOutputWithContext(ctx context.Context) AzureIntegrationsArrayOutput {
	return o
}

func (o AzureIntegrationsArrayOutput) Index(i pulumi.IntInput) AzureIntegrationsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AzureIntegrations {
		return vs[0].([]*AzureIntegrations)[vs[1].(int)]
	}).(AzureIntegrationsOutput)
}

type AzureIntegrationsMapOutput struct{ *pulumi.OutputState }

func (AzureIntegrationsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzureIntegrations)(nil)).Elem()
}

func (o AzureIntegrationsMapOutput) ToAzureIntegrationsMapOutput() AzureIntegrationsMapOutput {
	return o
}

func (o AzureIntegrationsMapOutput) ToAzureIntegrationsMapOutputWithContext(ctx context.Context) AzureIntegrationsMapOutput {
	return o
}

func (o AzureIntegrationsMapOutput) MapIndex(k pulumi.StringInput) AzureIntegrationsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AzureIntegrations {
		return vs[0].(map[string]*AzureIntegrations)[vs[1].(string)]
	}).(AzureIntegrationsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AzureIntegrationsInput)(nil)).Elem(), &AzureIntegrations{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureIntegrationsArrayInput)(nil)).Elem(), AzureIntegrationsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureIntegrationsMapInput)(nil)).Elem(), AzureIntegrationsMap{})
	pulumi.RegisterOutputType(AzureIntegrationsOutput{})
	pulumi.RegisterOutputType(AzureIntegrationsArrayOutput{})
	pulumi.RegisterOutputType(AzureIntegrationsMapOutput{})
}
